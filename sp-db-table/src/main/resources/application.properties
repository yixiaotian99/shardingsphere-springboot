
# shardingjdbc分片策略
# 配置数据源，给数据源起名称,
# 水平分库分表，配置两个数据源
spring.shardingsphere.datasource.names=m0,m1

# 一个实体类对应两张表，覆盖
spring.main.allow-bean-definition-overriding=true

#配置第一个数据源具体内容，包含连接池，驱动，地址，用户名和密码
spring.shardingsphere.datasource.m0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m0.url=jdbc:mysql://localhost:3306/companys_0?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.m0.username=root
spring.shardingsphere.datasource.m0.password=123456

#配置第二个数据源具体内容，包含连接池，驱动，地址，用户名和密码
spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://localhost:3306/companys_1?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=123456


#指定数据库分布情况，数据库里面表分布情况 这里仅做了分库
# m0 m1     t_company_0 t_company_1
spring.shardingsphere.sharding.tables.t_company.actual-data-nodes=m$->{0..1}.t_company_$->{0..2}


# 指定数据库分片策略 约定字段 province_id % 2 取模, 如果结果是0 存 m0 库，1存m1库
spring.shardingsphere.sharding.tables.t_company.database-strategy.inline.sharding-column=province_id
spring.shardingsphere.sharding.tables.t_company.database-strategy.inline.algorithm-expression=m$->{province_id % 2}
#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=province_id
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=m$->{province_id % 2}


# 指定表分片策略  约定 id 值偶数添加到t_company_0表，如果 id是奇数添加到t_company_1表
spring.shardingsphere.sharding.tables.t_company.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.t_company.table-strategy.inline.algorithm-expression=t_company_$->{id % 2}


# 指定t_company表里面主键id 生成策略  SNOWFLAKE
spring.shardingsphere.sharding.tables.t_company.key-generator.column=id
spring.shardingsphere.sharding.tables.t_company.key-generator.type=SNOWFLAKE


# 打开sql输出日志
spring.shardingsphere.props.sql.show=true


# mybatis 插件扫描地址
mybatis-plus.mapper-locations=classpath:mapper/*Mapper.xml
