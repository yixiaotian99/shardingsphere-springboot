# shardingjdbc分片策略
# 配置数据源，给数据源起名称
spring.shardingsphere.datasource.names=m1

# 一个实体类对应两张表，覆盖
spring.main.allow-bean-definition-overriding=true


#配置数据源具体内容，包含连接池，驱动，地址，用户名和密码
spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://localhost:3306/users_0?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=123456


# 1. 指定 t_dict 表分布情况，配置表在哪个数据库里面，表名称都是什么  m1.t_dict_0 , m1.t_dict_1
spring.shardingsphere.sharding.tables.t_dict.actual-data-nodes=m1.t_dict_$->{0..1}

# 2. 指定分片策略  约定id值偶数添加到t_dict_0表，如果id是奇数添加到t_dict_1表
spring.shardingsphere.sharding.tables.t_dict.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.t_dict.table-strategy.inline.algorithm-expression=t_dict_$->{ id % 2 }


# 3. 指定t_dict表里面主键cid 生成策略  SNOWFLAKE
spring.shardingsphere.sharding.tables.t_dict.key-generator.column=id
spring.shardingsphere.sharding.tables.t_dict.key-generator.type=SNOWFLAKE


# 打开sql输出日志
spring.shardingsphere.props.sql.show=true

# mybatis 插件扫描地址
mybatis-plus.mapper-locations=classpath:mapper/*Mapper.xml




